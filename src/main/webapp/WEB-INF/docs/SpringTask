Spring定时任务的几种实现
一．分类
1.Java自带的java.util.Timer类，这个类允许你调度一个java.util.TimerTask任务。
使用这种方式可以让你的程序按照某一个频度执行，但不能在指定时间运行。一般用的较少，这篇文章将不做详细介绍。
2.使用Quartz，这是一个功能比较强大的的调度器，可以让你的程序在指定时间执行，
也可以按照某一个频度执行，配置起来稍显复杂，稍后会详细介绍。
3.Spring3.0以后自带的task，可以将它看成一个轻量级的Quartz，而且使用起来比Quartz简单许多，稍后会介绍。

从作业类的继承方式来讲，可以分为两类：
1.作业类需要继承自特定的作业类基类，如Quartz中需要继承自
org.springframework.scheduling.quartz.QuartzJobBean；java.util.Timer中需要继承自java.util.TimerTask。
2.作业类即普通的java类，不需要继承自任何基类。


从任务调度的触发时机来分，这里主要是针对作业使用的触发器，主要有以下两种：
1.每隔指定时间则触发一次，在Quartz中对应的触发器为：org.springframework.scheduling.quartz.SimpleTriggerBean
2.每到指定时间则触发一次，在Quartz中对应的调度器为：org.springframework.scheduling.quartz.CronTriggerBean

cron：指定cron表达式
fixedDelay：即表示从上一个任务完成开始到下一个任务开始的间隔，单位是毫秒。
fixedRate：即从上一个任务开始到下一个任务开始的间隔，单位是毫秒。

Java 定时任务
1.创建TimerTask实例对象，覆写run方法。
2.使用Timer定时调用task任务，timer.scheduleAtFixedRate(task,delay,intevalPeriod).

Timer的缺陷
1.Timer管理时间延迟缺陷，如果存在多个线程，后面的线程要等前面的任务执行完才会开始。
同步，sychronized.
2.Timer抛出异常缺陷
timer 抛出异常后，会终止所有任务的运行。
对于Timer的缺陷，我们可以考虑 ScheduledThreadPoolExecutor 来替代。
Timer是基于绝对时间的，对系统时间比较敏感，而ScheduledThreadPoolExecutor 则是基于相对时间；
Timer是内部是单一线程，而ScheduledThreadPoolExecutor内部是个线程池，所以可以支持多个任务并发执行。

scheduledExecutorService
用ScheduledExecutorService替代Timer






























