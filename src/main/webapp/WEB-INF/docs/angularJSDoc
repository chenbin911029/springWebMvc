AngularJS 中文网
模板(Template)
指令(Directive)
模型(Model)
作用域(Scope)
表达式(Expression)
编译器(Compiler)
过滤器(Filter)
视图(View)
数据绑定(Data Binding)
控制器(Controller)
依赖注入(Dependency Injection)
注入器(Injector)
模块(Module)
服务(Service)
添加UI逻辑：控制器
notes:
1.ng-app=" "  定义angularJS的使用范围；
2.ng-init="变量=值;变量='值'"  初始化变量的值，有多个变量时，中间用分号隔开；
3.ng-model="变量"  定义变量名；
4.ng-bind="变量"  绑定变量名，获取该变量的数据。这里的变量就是第3条的变量名。
但是一般都用双重花括号来获取变量的值，比如：{{变量}}。
AngularJS 表达式:
AngularJS 表达式写在双大括号内：{{ expression }}。
AngularJS 表达式把数据绑定到 HTML，这与 ng-bind 指令有异曲同工之妙。
AngularJS 将在表达式书写的位置"输出"数据。

AngularJS 表达式 与 JavaScript 表达式
类似于 JavaScript 表达式，AngularJS 表达式可以包含字母，操作符，变量。
与 JavaScript 表达式不同，AngularJS 表达式可以写在 HTML 中。
与 JavaScript 表达式不同，AngularJS 表达式不支持条件判断，循环及异常。
与 JavaScript 表达式不同，AngularJS 表达式支持过滤器。

AngularJS 指令
AngularJS 指令是扩展的 HTML 属性，带有前缀 ng-。
ng-app 指令初始化一个 AngularJS 应用程序。
ng-init 指令初始化应用程序数据。
ng-model 指令把元素值（比如输入域的值）绑定到应用程序。

ng-app 指令
ng-app 指令定义了 AngularJS 应用程序的 根元素。
ng-app 指令在网页加载完毕时会自动引导（自动初始化）应用程序。

2017-11-12 周日
ng-model 指令根据表单域的状态添加/移除以下类：设定该状态下的样式。
ng-empty
ng-not-empty
ng-touched: 控件已失去焦点
ng-untouched: 控件未失去焦点
ng-valid 验证通过
ng-valid-[key]: 由$setValidity添加的所有验证通过的值
ng-invalid 验证失败
ng-invalid-[key]: 由$setValidity添加的所有验证失败的值
ng-dirty: 控件输入值已变更
ng-pending: 任何为满足$asyncValidators的情况
ng-pristine: 控件为初始状态

Scope 概述
AngularJS 应用组成如下：
View(视图), 即 HTML。
Model(模型), 当前视图中可用的数据。
Controller(控制器), 即 JavaScript 函数，可以添加或修改属性。

scope 是模型。
scope 是一个 JavaScript 对象，带有属性和方法，这些属性和方法可以在视图和控制器中使用。

15:02
AngularJS 控制器
ng-controller 指令定义了应用程序控制器。
控制器的 $scope （相当于作用域、控制范围）用来保存AngularJS Model(模型)的对象。

AngularJS 过滤器
AngularJS 过滤器可用于转换数据：
过滤器	描述
currency	格式化数字为货币格式。
filter	从数组项中选择一个子集。
lowercase	格式化字符串为小写。
orderBy	根据某个表达式排列数组。
uppercase	格式化字符串为大写。

1、uppercase，lowercase 大小写转换
{{ "lower cap string" | uppercase }}   // 结果：LOWER CAP STRING
{{ "TANK is GOOD" | lowercase }}      // 结果：tank is good
2、date 格式化
{{1490161945000 | date:"yyyy-MM-dd HH:mm:ss"}} // 2017-03-22 13:52:25
3、number 格式化（保留小数）
{{149016.1945000 | number:2}}
4、currency货币格式化
{{ 250 | currency }}            // 结果：$250.00
{{ 250 | currency:"RMB ￥ " }}  // 结果：RMB ￥ 250.00
5、filter查找
{{ [{"age": 20,"id": 10,"name": "iphone"},
{"age": 12,"id": 11,"name": "sunm xing"},
{"age": 44,"id": 12,"name": "test abc"}
] | filter:{'name':'iphone'} }}

2017-11-13
AngularJS 服务(Service)
AngularJS 内建了30 多个服务。
有个 $location 服务，它可以返回当前页面的 URL 地址。
$timeout 可用于设置单次或多次延时服务;
$interval 可用于设置始终运行的延时服务。

xmlHttpRequest
$http.get('/someUrl', config).then(successCallback, errorCallback);
$http.post('/someUrl', data, config).then(successCallback, errorCallback);

$http.get
$http.head
$http.post
$http.put
$http.delete
$http.jsonp
$http.patch

AngularJS Select(选择框)
ng-repeat 有局限性，选择的值是一个字符串:
使用 ng-options 指令，选择的值是一个对象：

2017-11-15
odd 奇数
even 偶数
<table>
    <tr ng-repeat="x in names">
        <td ng-if="$odd" style="background-color:#f1f1f1">{{ x.Name }}</td>
        <td ng-if="$even">{{ x.Name }}</td>
        <td ng-if="$odd" style="background-color:#f1f1f1">{{ x.Country }}</td>
        <td ng-if="$even">{{ x.Country }}</td>
    </tr>
</table>

AngularJS HTML DOM
实例解析
ng-app 指令定义了 AngularJS 应用。
ng-controller 指令定义了应用控制器。
ng-model 指令绑定了两个 input 元素到模型的 user 对象。
formCtrl 函数设置了 master 对象的初始值，并定义了 reset() 方法。
reset() 方法设置了 user 对象等于 master 对象。
ng-click 指令调用了 reset() 方法，且在点击按钮时调用。
novalidate 属性在应用中不是必须的，但是你需要在 AngularJS 表单中使用，用于重写标准的 HTML5 验证。

AngularJS API
API 意为 Application Programming Interface（应用程序编程接口）。
angular.lowercase()	转换字符串为小写
angular.uppercase()	转换字符串为大写
angular.isString()	判断给定的对象是否为字符串，如果是返回 true。
angular.isNumber()	判断给定的对象是否为数字，如果是返回 true。



























